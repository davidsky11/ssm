<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crm.dao.mybatis.ExchangeMapper">  

	<insert id="saveExchange" parameterType="com.crm.domain.Exchange" >
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(UUID(), "-", "")
		</selectKey>
			insert into exchange(<trim suffixOverrides=",">
			<if test="id !=null and id !=''">id,</if>
            <if test="userId !=null and userId !=''">userId,</if>
            <if test="exchangeTime !=null and exchangeTime !=''">exchangeTime,</if>
            <if test="insideCode !=null and insideCode !=''">insideCode,</if>
            <if test="privateCode !=null and privateCode !=''">privateCode,</if>
            <if test="publicCode !=null and publicCode !=''">publicCode,</if>
            <if test="longitude !=null and longitude !=''">longitude,</if>
            <if test="latitude !=null and latitude !=''">latitude,</if>
            <if test="flagCode !=null and flagCode !=''">flagCode,</if>
            <if test="waresId !=null and waresId !=''">waresId</if>
            </trim>)values(<trim suffixOverrides=",">
            <if test="id !=null and id !=''">#{id},</if>
            <if test="userId !=null and userId !=''">#{userId},</if>
            <if test="exchangeTime !=null and exchangeTime !=''">#{exchangeTime},</if>
            <if test="insideCode !=null and insideCode !=''">#{insideCode},</if>
            <if test="privateCode !=null and privateCode !=''">#{privateCode},</if>
            <if test="publicCode !=null and publicCode !=''">#{publicCode},</if>
            <if test="longitude !=null and longitude !=''">#{longitude},</if>
            <if test="latitude !=null and latitude !=''">#{latitude},</if>
            <if test="flagCode !=null and flagCode !=''">#{flagCode},</if>
            <if test="waresId !=null and waresId !=''">#{waresId}</if>
            </trim>)
	</insert>
	
	<delete id="deleteExchange" parameterType="String">
		delete from exchange where id=#{id}
	</delete>
	
	<update id="updateExchange" parameterType="com.crm.domain.Exchange">
    	update exchange
    	<set>
            <if test="userId !=null and userId !=''">userId=#{userId},</if>
            <if test="exchangeTime !=null and exchangeTime !=''">exchangeTime=#{exchangeTime},</if>
            <if test="insideCode !=null and insideCode !=''">insideCode=#{insideCode},</if>
            <if test="privateCode !=null and privateCode !=''">privateCode=#{privateCode}</if>
            <if test="publicCode !=null and publicCode !=''">publicCode=#{publicCode},</if>
            <if test="longitude !=null and longitude !=''">longitude=#{longitude},</if>
            <if test="latitude !=null and latitude !=''">latitude=#{latitude},</if>
            <if test="flagCode !=null and flagCode !=''">flagCode=#{flagCode},</if>
            <if test="waresId !=null and waresId !=''">waresId=#{waresId}</if>
    	</set>
    	where id = #{id}
    </update>

	<select id="getExchangeList" resultType="com.crm.domain.Exchange">
		select t.id,t.userId,t.exchangeTime,t.insideCode,t.privateCode,t.publicCode,t.longitude,t.latitude,t.flagCode,t.waresId from exchange t where 1=1
		<if test="conditionSql !=null and conditionSql !=''">
			${conditionSql}
		</if>
		<if test="page.sort != null and page.sort != ''">
            order by #{page.sort} #{page.order}
        </if>
        <if test="page.page > 0">
            limit #{page.start},#{page.end}
        </if>
	</select>
	
	<select id="findByCondition" resultType="com.crm.domain.Exchange">
		select t.id,t.userId,t.exchangeTime,t.insideCode,t.privateCode,t.publicCode,t.longitude,t.latitude,t.flagCode,t.waresId from exchange t where 1=1
		<if test="conditionSql !=null and conditionSql !=''">${conditionSql}</if>
	</select>
	
	<select id="findByUser" parameterType="com.crm.domain.User" resultType="com.crm.domain.Exchange">
		<!-- select t.id,t.userId,t.exchangeTime,t.insideCode,t.privateCode from exchange t where 1=1
		where t.publisherId = u.id and u.id = #{id} -->
		select distinct t.id,t.userId,t.exchangeTime,t.insideCode,t.privateCode,t.publicCode,t.longitude,t.latitude,t.flagCode,t.waresId from exchange t, sysuser a 
		where (t.userId = a.id and a.id = #{id}) or (t.userName like concat('%',#{username},'%'))
	</select> 
	
	<select id="findById" resultType="com.crm.domain.Exchange" >
		select t.id, t.userId, t.exchangeTime, t.insideCode, t.privateCode, t.publicCode, t.longitude, t.latitude, t.flagCode,t.waresId from exchange t
		where t.id = #{id}
	</select>
	
	<select id="getDatagridTotal" resultType="long" parameterType="com.crm.domain.Exchange">
		select count(1) from exchange where  1=1
		<if test="userId != null and userId != ''">
            and userId like concat('%',#{userId},'%')
        </if>
	</select>
	
	<select id="getDatagridTotalByCondition" resultType="long" parameterType="String">
		select count(1) from exchange where 1=1
		<if test="conditionSql != null and conditionSql != ''">
            ${conditionSql}
        </if>
	</select>

	<select id="datagridExchange" resultType="com.crm.domain.Exchange">
		select t.id, t.userId, t.exchangeTime, t.insideCode, t.privateCode, t.publicCode, t.longitude, t.latitude, t.flagCode, t.waresId from exchange t where 1=1
		<if test="exchange.userId != null and exchange.userId != ''">
			and t.userId = #{exchange.userId}
		</if>
		<if test="exchange.exchangeTime != null and exchange.exchangeTime != ''">
        	and date(t.exchangeTime) = #{exchange.exchangeTime} 
        </if>
		<if test="page.sort != null and page.sort != ''">
            order by #{page.sort} #{page.order}
        </if>
        <if test="page.page > 0">
            limit #{page.start},#{page.end}
        </if>
	</select>
    
</mapper>
