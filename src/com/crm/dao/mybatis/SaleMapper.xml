<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crm.dao.mybatis.SaleMapper">

	<resultMap type="com.crm.domain.Sale" id="saleMap">
		<id property="id" column="s_id" />
		<result property="year" column="s_year" />
		<result property="month" column="s_month" />
		<result property="day" column="s_day" />
		<result property="amount" column="s_amount" />
		<result property="activityId" column="s_activityId" />
		<association property="activity" resultMap="activityMap" />
	</resultMap>
	
	<resultMap type="com.crm.domain.Activity" id="activityMap">
		<id property="id" column="a_id" />
		<result property="title" column="a_title" />
		<result property="description" column="a_description" />
		<result property="publicCode" column="a_publicCode" />
	</resultMap>

	<insert id="saveSale" parameterType="com.crm.domain.Sale" keyProperty="id" useGeneratedKeys="true">
			insert into sale(<trim suffixOverrides=",">
            <if test="year !=null and year !=''">year,</if>
            <if test="month !=null and month !=''">month,</if>
            <if test="amount !=null and amount !=''">amount,</if>
            </trim>)values(<trim suffixOverrides=",">
            <if test="year !=null and year !=''">#{year}</if>
            <if test="month !=null and month !=''">#{month}</if>
            <if test="amount !=null and amount !=''">#{amount}</if>
            </trim>)
	</insert> 
	
	<delete id="deleteSale" parameterType="String">
		delete from sale where id=#{id}
	</delete>
	
	<update id="updateSale" parameterType="com.crm.domain.Sale">
    	update sale
    	<set>
            <if test="year !=null and year !=''">year=#{year},</if>
            <if test="month !=null and month !=''">month=#{month},</if>
            <if test="day !=null and day != ''">day=#{day},</if>
            <if test="amount !=null and amount !=''">amount=#{amount}</if>
    	</set>
    	where id = #{id}
    </update>

	<select id="getSaleList" resultType="com.crm.domain.Sale">
		select t.id,t.year,t.month,t.day,sum(t.amount) amount from sale t where 1=1
		<if test="conditionSql != null and conditionSql != ''">
            ${conditionSql}
        </if>
	</select>
	
	<select id="findById" resultType="com.crm.domain.Sale">
		select t.id,t.year,t.month,t.day,t.amount from sale t where t.id=#{id}
	</select> 
	
	<select id="getDatagridTotal" resultType="long">
		select count(1) from sale where 1=1
		<if test="year != null and year != ''">
            and year = #{year}
        </if>
        <if test="month != null and month != ''">
            and month = #{month}
        </if>
        <if test="day != null and day != ''">
            and day = #{day}
        </if>
	</select>
	
	<select id="datagridSale" resultType="com.crm.domain.Sale">
		select t.id,t.year,t.month,t.day,t.amount from sale t where 1=1
		<if test="sale.year != null and sale.year != ''">
            and year = #{sale.year}
        </if>
        <if test="sale.month != null and sale.month != ''">
            and month = #{sale.month}
        </if>
        <if test="sale.day != null and sale.day != ''">
            and day = #{sale.day}
        </if>
		<if test="page.sort != null and page.sort != ''">
            order by #{page.sort} #{page.order}
        </if>
        <if test="page.page > 0">
            limit #{page.start},#{page.end}
        </if>
	</select>
	
	<select id="findSaleListPage" resultMap="saleMap">
		select t.id s_id, t.year s_year, t.month s_month, t.day s_day, t.amount s_amount, t.activityId s_activityId,
		 a.id a_id, a.title a_title, a.description a_description, a.publicCode a_publicCode
		 from sale t right join activity a on t.activityId = a.id 
		 where a.publicCode in (${publicCode})
		<if test="conditionSql != null and conditionSql != ''">
            ${conditionSql}
        </if>
        <if test="page.sort != null and page.sort != ''">
            order by #{page.sort} #{page.order}
        </if>
        <if test="page.page > 0">
            limit #{page.start},#{page.end}
        </if>
	</select>
	
	<select id="findSaleListBy" resultMap="saleMap">
		select t.id s_id, t.year s_year, t.month s_month, t.day s_day, t.amount s_amount, t.activityId s_activityId,
		 a.id a_id, a.title a_title, a.description a_description, a.publicCode a_publicCode
		 from sale t left join activity a on t.activityId = a.id 
		 where t.activityId in (${atyIds})
		<if test="conditionSql != null and conditionSql != ''">
            ${conditionSql}
        </if>
	</select>
	
	<select id="findSaleList" resultMap="saleMap">
		select t.id s_id, t.year s_year, t.month s_month, t.day s_day, sum(t.amount) s_amount, t.activityId s_activityId,
		 a.id a_id, a.title a_title, a.description a_description, a.publicCode a_publicCode
		 from sale t left join activity a on t.activityId = a.id 
		 where 1=1
		 <if test="activityId !=null and activityId != ''">
			and activityId = #{activityId} 
		</if>
		<if test="year !=null and year != ''">
			and year = #{year} 
		</if>
		<if test="month !=null and month != ''">
			and month = #{month} 
		</if>
		<if test="userId !=null and userId != ''">
			and userId = #{userId}
		</if>
		<if test="level !=null and level != ''">
			group by ${level}
		</if>
	</select>
	
	<insert id="addSaleBatch" parameterType="java.util.List" >
		insert into sale(year, month, day, amount, activityId, userId)
		values
		<foreach collection="saleList" item="sale" index="index" separator=",">
			(#{sale.year}, #{sale.month}, #{sale.day}, #{sale.amount}, #{sale.activityId}, #{sale.userId})
		</foreach>
	</insert>
    
</mapper>
