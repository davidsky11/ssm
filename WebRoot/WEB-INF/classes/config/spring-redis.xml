<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.crm.dao.redis" />

	<!--引入属性文件 -->
	<context:property-placeholder location="classpath:configuration.properties" />
    
	<!-- 配置Redis -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		最大能够保持idle状态的对象数
		<property name="maxIdle" value="256" />
		最大分配的对象数
		<property name="maxActive" value="512" />
		当池内没有返回对象时，最大等待时间 
		<property name="maxWait" value="1000" />
		当调用borrow Object方法时，是否进行有效性检查  
		<property name="testOnBorrow" value="true" />
		当调用return Object方法时，是否进行有效性检查
		<property name="testOnReturn" value="true" />
	</bean> -->
	
	 <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
	 	p:host-name="${redis.host}" p:port="${redis.port}" />  
	 	<!-- p:password="${redis.pass}" p:pool-config-ref="poolConfig" -->
     
     <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    
     <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" ref="stringRedisSerializer" />
    	<!-- <property name="hashKeySerializer" ref="stringRedisSerializer" />   -->
    	<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean> 
    
</beans>   